apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  #token: ""
  ttl: 48h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: "0.0.0.0"
  bindPort: {{ control_plane_port }}
nodeRegistration:
  criSocket: unix:///run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  imagePullSerial: true
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
timeouts:
  controlPlaneComponentHealthCheck: 4m0s
  discovery: 5m0s
  etcdAPICall: 2m0s
  kubeletHealthCheck: 4m0s
  kubernetesAPICall: 1m0s
  tlsBootstrap: 5m0s
  upgradeManifests: 5m0s
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
clusterName: "{{ cluster_name }}"
certificatesDir: "{{ kubernetes_cert_dir }}"
imageRepository: registry.k8s.io
networking:
  dnsDomain: "{{ dns_domain }}"
  podSubnet: "{{ pod_cidr }}"
  serviceSubnet: "{{ svc_cidr }}"
dns:
  imageRepository: registry.k8s.io/coredns
  imageTag: "{{ coredns_version }}"
controlPlaneEndpoint: "{{ control_plane_endpoint }}:{{ control_plane_endpoint_port }}"
kubernetesVersion: "{{ kubernetes_version }}"
etcd:
  local:
    dataDir: "{{ etcd_data_dir }}"
apiServer:
  extraArgs:
  - name: kubelet-preferred-address-types
    value: InternalIP
  certSANs:
  - localhost
  - "{{ control_plane_endpoint }}"
  - "{{ cluster_name }}.{{ cluster_domain }}"
{% for alias in cluster_name_aliases %}
  - "{{ alias }}.{{ cluster_domain }}"
{% endfor %}
caCertificateValidityPeriod: 87600h0m0s
certificateValidityPeriod: 8760h0m0s
controllerManager:
  extraArgs:
  - name: bind-address
    value: 0.0.0.0
scheduler:
  extraArgs:
  - name: bind-address
    value: 0.0.0.0
encryptionAlgorithm: RSA-2048
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
metricsBindAddress: "0.0.0.0" # required to expose metrics
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: "systemd"  # tells kubelet about cgroup driver to use (required by containerd)
